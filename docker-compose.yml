version: '3.8'

services:
  # PostgreSQL 데이터베이스
  db:
    image: postgres:15-alpine
    container_name: studymate-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-studymate}
      POSTGRES_USER: ${POSTGRES_USER:-studymate}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-studymate123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-studymate}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - studymate-network

  # Redis 캐시
  redis:
    image: redis:7-alpine
    container_name: studymate-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - studymate-network

  # StudyMate API 애플리케이션
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: studymate-api
    environment:
      - DJANGO_SETTINGS_MODULE=studymate_api.settings
      - DEBUG=${DEBUG:-False}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-studymate}
      - POSTGRES_USER=${POSTGRES_USER:-studymate}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-studymate123}
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - COLLECT_STATIC=true
      - GUNICORN_WORKERS=${GUNICORN_WORKERS:-4}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - studymate-network

  # Celery 워커
  celery:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: studymate-celery
    command: celery -A studymate_api worker -l info --concurrency=2
    environment:
      - DJANGO_SETTINGS_MODULE=studymate_api.settings
      - DEBUG=False
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-studymate}
      - POSTGRES_USER=${POSTGRES_USER:-studymate}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-studymate123}
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - studymate-network

  # Celery Beat (스케줄러)
  celery-beat:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: studymate-celery-beat
    command: celery -A studymate_api beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DJANGO_SETTINGS_MODULE=studymate_api.settings
      - DEBUG=False
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-studymate}
      - POSTGRES_USER=${POSTGRES_USER:-studymate}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-studymate123}
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - celery_beat_data:/app/celerybeat-schedule
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - studymate-network

  # Nginx (리버스 프록시)
  nginx:
    image: nginx:alpine
    container_name: studymate-nginx
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./docker/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - studymate-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  celery_beat_data:
    driver: local

networks:
  studymate-network:
    driver: bridge